name: Go Release Binaries

on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  release-linux-amd64:
    name: release linux/amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set APP_VERSION environment
        run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | \
          cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - name: Set BUILD_TIME env
        run: echo BUILD_TIME=$(date) >> ${GITHUB_ENV}
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: linux
          goarch: amd64
          extra_files: config.yaml.example README.md
          ldflags: -X "main.Version={{ env.APP_VERSION }} {{ env.BUILD_TIME }}"

  release-linux-arm7:
    name: release linux/arm-7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set APP_VERSION environment
        run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | \
          cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - name: Set BUILD_TIME env
        run: echo BUILD_TIME=$(date) >> ${GITHUB_ENV}
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: linux
          goarch: arm
          goarm: 7
          extra_files: config.yaml.example README.md
          ldflags: -X "main.Version={{ env.APP_VERSION }} {{ env.BUILD_TIME }}"

  release-darwin-amd64:
    name: release darwin/amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set APP_VERSION environment
        run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | \
          cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - name: Set BUILD_TIME env
        run: echo BUILD_TIME=$(date) >> ${GITHUB_ENV}
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: darwin
          goarch: amd64
          extra_files: config.yaml.example README.md
          ldflags: -X "main.Version={{ env.APP_VERSION }} {{ env.BUILD_TIME }}"
